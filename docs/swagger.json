{
    "swagger": "2.0",
    "info": {
        "title": "Finance App API",
        "description": "API, made to study NodeJS and React development, that allows users to manage their finances",
        "version": "1.0.0"
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Enter 'Bearer' followed by your token. Example: 'Bearer eyJhbGciOiJT..."
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ],
    "paths": {
        "/api/users": {
            "post": {
                "summary": "Create a new User",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/CreateUserParams" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/UserWithToken"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "tags": ["User"],
                "summary": "Get user",
                "responses": {
                    "200": {
                        "description": "User found",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete user",
                "tags": ["User"],
                "responses": {
                    "200": {
                        "description": "User found and deleted",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Updates user",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/CreateUserParams" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "400": {
                        "description": "Invalid parameters"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/users/login": {
            "post": {
                "summary": "Authenticates a user",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/LoginUserParams" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "schema": {
                            "$ref": "#/definitions/UserWithToken"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/refresh-token": {
            "post": {
                "summary": "Authenticates a user",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/RefreshTokenParams" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "schema": {
                            "$ref": "#/definitions/TokensObject"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/balance": {
            "get": {
                "tags": ["User"],
                "summary": "Get user balance",
                "responses": {
                    "200": {
                        "description": "User found and has transactions to calculate balance",
                        "schema": {
                            "$ref": "#/definitions/UserBalance"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions": {
            "get": {
                "summary": "Get user Transactions",
                "tags": ["Transaction"],
                "responses": {
                    "200": {
                        "description": "Transaction created successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Transaction"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new Transaction",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateTransactionParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction created successfully",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/{transactionId}": {
            "delete": {
                "summary": "Deletes Transaction by ID",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "transactionId",
                        "required": true,
                        "type": "string",
                        "description": "transaction's ID to be deleted"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction created successfully",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Transaction Not Found",
                        "schema": {
                            "$ref": "#/definitions/TransactionNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Updates Transaction by ID",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "transactionId",
                        "required": true,
                        "type": "string",
                        "description": "transaction's ID to be updated"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateTransactionParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction created successfully",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Transaction Not Found",
                        "schema": {
                            "$ref": "#/definitions/TransactionNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "String",
                    "example": "f70361c5-1b2c-4d70-ab01-596ac522c4ef"
                },
                "first_name": {
                    "type": "String",
                    "example": "John"
                },
                "last_name": {
                    "type": "String",
                    "example": "Wick"
                },
                "email": {
                    "type": "String",
                    "example": "john.wick@continental.com"
                },
                "password": {
                    "type": "String",
                    "example": "IKilledThemAll"
                }
            }
        },
        "UserWithToken": {
            "allOf": [
                {
                    "$ref": "#/definitions/User"
                },
                {
                    "type": "object",
                    "properties": {
                        "tokens": {
                            "type": "object",
                            "properties": {
                                "access_token": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                },
                                "refresh_token": {
                                    "type": "string",
                                    "example": "eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZS79..."
                                }
                            }
                        }
                    }
                }
            ]
        },
        "TokensObject": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZS79..."
                }
            }
        },
        "CreateUserParams": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "String",
                    "example": "John"
                },
                "last_name": {
                    "type": "String",
                    "example": "Wick"
                },
                "email": {
                    "type": "String",
                    "example": "john.wick@continental.com"
                },
                "password": {
                    "type": "String",
                    "example": "IKilledThemAll"
                }
            }
        },
        "UserBalance": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "f70361c5-1b2c-4d70-ab01-596ac522c4ef"
                },
                "earnings": {
                    "type": "string",
                    "example": "60000"
                },
                "expenses": {
                    "type": "string",
                    "example": "15000"
                },
                "investments": {
                    "type": "string",
                    "example": "0"
                },
                "balance": {
                    "type": "string",
                    "example": "45000"
                }
            }
        },
        "CreateTransactionParams": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "f70361c5-1b2c-4d70-ab01-596ac522c4ef"
                },
                "name": {
                    "type": "String",
                    "example": "Salary"
                },
                "date": {
                    "type": "String",
                    "example": "2023-12-14T18:45:01.906Z"
                },
                "amount": {
                    "type": "Number",
                    "example": 10000.0
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                }
            }
        },
        "UpdateTransactionParams": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "String",
                    "example": "Salary"
                },
                "date": {
                    "type": "String",
                    "example": "2023-12-14T18:45:01.906Z"
                },
                "amount": {
                    "type": "Number",
                    "example": 10000.0
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                }
            }
        },
        "LoginUserParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user_email@financeapp.com",
                    "required": true
                },
                "password": {
                    "type": "string",
                    "example": "Dkdfnmsdf",
                    "required": true
                }
            }
        },
        "RefreshTokenParams": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "type": "string",
                    "example": "iwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn...",
                    "required": true
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "3abf50d6-392f-4181-a8a8-ad3aa05971ff"
                },
                "name": {
                    "type": "String",
                    "example": "Salary"
                },
                "date": {
                    "type": "String",
                    "example": "2023-12-14T18:45:01.906Z"
                },
                "amount": {
                    "type": "string",
                    "example": "10000"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                }
            }
        },
        "InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "UserNotFoundResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User Not Found"
                }
            }
        },
        "TransactionNotFoundResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Transaction Not Found"
                }
            }
        },
        "UnauthorizedResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        }
    }
}
