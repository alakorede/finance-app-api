{
    "swagger": "2.0",
    "info": {
        "title": "Finance App API",
        "description": "API, made to study NodeJS and React development, that allows users to manage their finances",
        "version": "1.0.0"
    },
    "paths": {
        "/api/users": {
            "post": {
                "summary": "Create a new User",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": "true",
                        "schema": { "$ref": "#/definitions/CreateUserParams" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Invalid parameters"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{userId}": {
            "get": {
                "tags": ["User"],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": "true",
                        "type": "string",
                        "description": "user's ID to get"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user by ID",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": "true",
                        "type": "string",
                        "description": "user's ID to be deleted"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found and deleted",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "String",
                    "example": "f70361c5-1b2c-4d70-ab01-596ac522c4ef"
                },
                "first_name": {
                    "type": "String",
                    "example": "John"
                },
                "last_name": {
                    "type": "String",
                    "example": "Wick"
                },
                "email": {
                    "type": "String",
                    "example": "john.wick@continental.com"
                },
                "password": {
                    "type": "String",
                    "example": "IKilledThemAll"
                }
            }
        },
        "CreateUserParams": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "String",
                    "example": "John"
                },
                "last_name": {
                    "type": "String",
                    "example": "Wick"
                },
                "email": {
                    "type": "String",
                    "example": "john.wick@continental.com"
                },
                "password": {
                    "type": "String",
                    "example": "IKilledThemAll"
                }
            }
        },
        "InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "UserNotFoundResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User Not Found"
                }
            }
        }
    }
}
