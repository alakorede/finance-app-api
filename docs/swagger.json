{
    "swagger": "2.0",
    "info": {
        "title": "Finance App API",
        "description": "API, made to study NodeJS and React development, that allows users to manage their finances",
        "version": "1.0.0"
    },
    "paths": {
        "/api/users": {
            "post": {
                "summary": "Create a new User",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": "true",
                        "schema": { "$ref": "#/definitions/CreateUserParams" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Invalid parameters"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{userId}": {
            "get": {
                "tags": ["User"],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": "true",
                        "type": "string",
                        "description": "user's ID to get"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user by ID",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": "true",
                        "type": "string",
                        "description": "user's ID to be deleted"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found and deleted",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "summary": "Updates user by ID",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": "true",
                        "type": "string",
                        "description": "user's ID to be udated"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": "true",
                        "schema": { "$ref": "#/definitions/CreateUserParams" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "400": {
                        "description": "Invalid parameters"
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{userId}/balance": {
            "get": {
                "tags": ["User"],
                "summary": "Get user balance by user ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": "true",
                        "type": "string",
                        "description": "user's ID to get balance"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found and has transactions to calculate balance",
                        "schema": {
                            "$ref": "#/definitions/UserBalance"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {},
            "post": {
                "summary": "Create a new Transaction",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": "true",
                        "schema": {
                            "$ref": "#/definitions/CreateTransactionParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction created successfully",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters"
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/transaction/{transactionId}": {
            "delete": {},
            "patch": {}
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "String",
                    "example": "f70361c5-1b2c-4d70-ab01-596ac522c4ef"
                },
                "first_name": {
                    "type": "String",
                    "example": "John"
                },
                "last_name": {
                    "type": "String",
                    "example": "Wick"
                },
                "email": {
                    "type": "String",
                    "example": "john.wick@continental.com"
                },
                "password": {
                    "type": "String",
                    "example": "IKilledThemAll"
                }
            }
        },
        "CreateUserParams": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "String",
                    "example": "John"
                },
                "last_name": {
                    "type": "String",
                    "example": "Wick"
                },
                "email": {
                    "type": "String",
                    "example": "john.wick@continental.com"
                },
                "password": {
                    "type": "String",
                    "example": "IKilledThemAll"
                }
            }
        },
        "UserBalance": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "f70361c5-1b2c-4d70-ab01-596ac522c4ef"
                },
                "earnings": {
                    "type": "string",
                    "example": "60000"
                },
                "expenses": {
                    "type": "string",
                    "example": "15000"
                },
                "investments": {
                    "type": "string",
                    "example": "0"
                },
                "balance": {
                    "type": "string",
                    "example": "45000"
                }
            }
        },
        "CreateTransactionParams": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "f70361c5-1b2c-4d70-ab01-596ac522c4ef"
                },
                "name": {
                    "type": "String",
                    "example": "Salary"
                },
                "date": {
                    "type": "String",
                    "example": "2023-12-14T18:45:01.906Z"
                },
                "amount": {
                    "type": "Number",
                    "example": 10000.0
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "3abf50d6-392f-4181-a8a8-ad3aa05971ff"
                },
                "user_id": {
                    "type": "string",
                    "example": "f70361c5-1b2c-4d70-ab01-596ac522c4ef"
                },
                "name": {
                    "type": "String",
                    "example": "Salary"
                },
                "date": {
                    "type": "String",
                    "example": "2023-12-14T18:45:01.906Z"
                },
                "amount": {
                    "type": "string",
                    "example": "10000"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                }
            }
        },
        "InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "UserNotFoundResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User Not Found"
                }
            }
        }
    }
}
